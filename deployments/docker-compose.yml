services:
  # PostgreSQL с pgvector
  postgres:
    image: pgvector/pgvector:pg17
    container_name: gemfactory-db
    environment:
      POSTGRES_DB: gemfactory
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-gemfactory123}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d gemfactory"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - gemfactory

  # Приложение GemFactory
  app:
    build:
      context: ..
      dockerfile: deployments/Dockerfile
    container_name: gemfactory
    environment:
      # База данных
      DB_DSN: postgres://postgres:${POSTGRES_PASSWORD:-gemfactory123}@postgres:5432/gemfactory?sslmode=disable
      # Telegram Bot
      BOT_TOKEN: ${BOT_TOKEN}
      ADMIN_USERNAME: ${ADMIN_USERNAME}
      # Spotify
      SPOTIFY_CLIENT_ID: ${SPOTIFY_CLIENT_ID}
      SPOTIFY_CLIENT_SECRET: ${SPOTIFY_CLIENT_SECRET}
      PLAYLIST_URL: ${PLAYLIST_URL}
      # LLM
      LLM_API_KEY: ${LLM_API_KEY}
      LLM_BASE_URL: ${LLM_BASE_URL:-https://integrate.api.nvidia.com/v1}
      LLM_TIMEOUT: ${LLM_TIMEOUT:-120}
      # Health check
      HEALTH_PORT: 8080
      LOG_LEVEL: ${LOG_LEVEL:-info}
    ports:
      - "8080:8080"
    volumes:
      - ../logs:/app/logs
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    # Лимиты ресурсов
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - gemfactory

volumes:
  postgres_data:

networks:
  gemfactory:
    driver: bridge

