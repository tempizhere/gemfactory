version: '3.8'

services:
  # PostgreSQL база данных
  postgres:
    image: postgres:15-alpine
    container_name: gemfactory_postgres
    environment:
      POSTGRES_DB: gemfactory
      POSTGRES_USER: gemfactory
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-gemfactory123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gemfactory -d gemfactory"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - gemfactory_network

  # Redis для кэширования (опционально)
  redis:
    image: redis:7-alpine
    container_name: gemfactory_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - gemfactory_network

  # Приложение GemFactory
  app:
    build:
      context: ..
      dockerfile: deployments/Dockerfile
    container_name: gemfactory_app
    environment:
      DB_DSN: postgres://gemfactory:${POSTGRES_PASSWORD:-gemfactory123}@postgres:5432/gemfactory?sslmode=disable
      BOT_TOKEN: ${BOT_TOKEN}
      ADMIN_USERNAME: ${ADMIN_USERNAME}
      SPOTIFY_CLIENT_ID: ${SPOTIFY_CLIENT_ID}
      SPOTIFY_CLIENT_SECRET: ${SPOTIFY_CLIENT_SECRET}
      PLAYLIST_URL: ${PLAYLIST_URL}
      HEALTH_PORT: 8080
      LOG_LEVEL: ${LOG_LEVEL:-info}
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ../logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - gemfactory_network

  # Nginx для проксирования (опционально)
  nginx:
    image: nginx:alpine
    container_name: gemfactory_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - gemfactory_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  gemfactory_network:
    driver: bridge
