name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [ main, develop ]

env:
  GO_VERSION: '1.21'
  DOCKER_IMAGE: tempizhere/gemfactory

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Clean golangci-lint cache
        run: rm -rf ~/.cache/golangci-lint
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/.cache/golangci-lint
          key: ${{ runner.os }}-go-lint-${{ github.job }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-lint-${{ github.job }}-
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v7
        with:
          version: v2.2.2
          args: --timeout=5m
          skip-cache: false

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Clean Go build cache
        run: |
          rm -rf ~/.cache/go-build
          go clean -modcache
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-test-${{ github.job }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-test-${{ github.job }}-
      - name: Install dependencies
        run: go mod download
      - name: Run tests
        run: go test -v -race -coverprofile=coverage.out ./...
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.out
          flags: unittests
          name: codecov-umbrella
      - name: Run security scan
        run: |
          go install github.com/sonatype-nexus-community/nancy@latest
          go list -json -deps ./... | nancy sleuth



  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: [lint, test]
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_IMAGE }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ${{ steps.meta.outputs.tags }}
            tempizhere/gemfactory:latest
            ${{ github.ref_type == 'tag' && github.ref_name || '' }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=docker
          cache-to: type=gha,mode=max,scope=docker
      - name: Docker Build Summary
        if: always()
        run: |
          echo '### üê≥ Docker image —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–Ω –∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!' >> $GITHUB_STEP_SUMMARY
          echo '' >> $GITHUB_STEP_SUMMARY
          echo '**–¢–µ–≥–∏:**' >> $GITHUB_STEP_SUMMARY
          echo '- `${{ steps.meta.outputs.tags }}`' >> $GITHUB_STEP_SUMMARY
          echo '- `tempizhere/gemfactory:latest`' >> $GITHUB_STEP_SUMMARY
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            echo "- \\`${GITHUB_REF_NAME}\\`" >> $GITHUB_STEP_SUMMARY
          fi
          echo '' >> $GITHUB_STEP_SUMMARY
          echo '**Docker Hub:** https://hub.docker.com/r/tempizhere/gemfactory' >> $GITHUB_STEP_SUMMARY



  notify:
    name: Notify on Failure
    runs-on: ubuntu-latest
    if: failure()
    needs: [lint, test, docker]
    steps:
      - name: Notify failure
        run: |
          echo "CI/CD pipeline failed!"
          # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (Slack, Telegram, etc.)