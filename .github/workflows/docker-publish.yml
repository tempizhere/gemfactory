name: Docker Publish

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24' # Обновлено до 1.24
      - name: Run tests
        run: go test ./...

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24' # Обновлено до 1.24
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest

  build:
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Check environment variables
        run: |
          echo "WHITELIST_DIR=internal/features/releasesbot/data"
          echo "BOT_TOKEN=[REDACTED]"
          echo "ADMIN_USERNAME=[REDACTED]"
      - name: Build Docker image
        run: docker build -t gemfactory:latest .
      # Опционально: публикуем образ в Docker Hub (раскомментируйте, если нужно)
      # - name: Log in to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      # - name: Tag and push Docker image
      #   run: |
      #     docker tag gemfactory:latest <your-dockerhub-username>/gemfactory:latest
      #     docker push <your-dockerhub-username>/gemfactory:latest